name: Apply Kubernetes manifests

on:
  workflow_dispatch:

jobs:
  apply-manifests:
    runs-on: ubuntu-latest

    steps:
      # –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rsync and SSH client
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq -y rsync openssh-client

      - name: Set up SSH
        env:
          REMOTE_HOST: ${{ vars.K8S_HOST }}
          REMOTE_PORT: ${{ vars.K8S_PORT }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          if [ -z $REMOTE_PORT ]; then
            REMOTE_PORT="22"
          fi
          ssh-keyscan -H $REMOTE_HOST -p $REMOTE_PORT >> ~/.ssh/known_hosts

      # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã kubernetes
      - name: Apply Kubernetes manifests
        env:
          REMOTE_USER: ${{ vars.K8S_USER }}
          REMOTE_HOST: ${{ vars.K8S_HOST }}
          REMOTE_PORT: ${{ vars.K8S_PORT }}
          NAMESPACE: ${{ vars.K8S_NAMESPACE }}
        run: |
          set -euo pipefail
          
          REMOTE_PORT="${REMOTE_PORT:-"22"}"
          NAMESPACE="${NAMESPACE:-$(yq eval '.metadata.name' namespace.yaml)}"
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
          missing_vars=0
          
          check_var() {
            local var_name="$1"
            local var_value="$2"
            local var_source="$3"
          
            if [ -z "$var_value" ]; then
              echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${var_source}.${var_name}"
              missing_vars=$((missing_vars + 1))
            else
              echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ${var_source}.${var_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
            fi
          }
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
          check_var "K8S_HOST" "$REMOTE_HOST" "vars"
          check_var "K8S_USER" "$REMOTE_USER" "vars"
          check_var "K8S_PORT" "$REMOTE_PORT" "vars"
          check_var "K8S_NAMESPACE" "$NAMESPACE" "vars"
          
          if [ $missing_vars -gt 0 ]; then
            echo "‚ùå –ù–∞–π–¥–µ–Ω–æ $missing_vars –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã."
            exit 1
          fi
          
          echo "‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ."
          
          # –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º .notapply
          touch .notapply
          cat "namespace.yaml" >> .notapply
          cat ".*-sa.yaml" >> .notapply
          
          # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É –æ–±—ä–µ–∫—Ç—É
          find . -maxdepth 1 -type f -name '*.yaml' ! -name '.*' -printf '%f\n' | grep -Exv -f .notapply | while read -r file; do
            echo "üîê Processing: $file"
            cat "$file" | ssh -p $REMOTE_PORT $REMOTE_USER@$REMOTE_HOST "kubectl apply -f - "
          done
